@article{wiki-hirsch,
 title = {Hirschberg's algorithm},
 note = {http://goo.gl/RyxLH},
 journal = {Wikipedia}
}
@article{running-pj,
 title = {Parallel Java on the RIT CS Parallel Computers},
 note = {http://www.cs.rit.edu/~ark/runningpj.shtml},
 journal = {Rochester Institute of Technology},
 author = {Alan Kaminsky}
}



@article{Hirschberg:1975,
 author = {Hirschberg, D. S.},
 title = {A linear space algorithm for computing maximal common subsequences},
 journal = {Commun. ACM},
 volume = {18},
 issue = {6},
 month = {June},
 year = {1975},
 issn = {0001-0782},
 pages = {341--343},
 numpages = {3},
 url = {http://doi.acm.org/10.1145/360825.360861},
 doi = {http://doi.acm.org/10.1145/360825.360861},
 acmid = {360861},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {editing, longest common sequence, string correction, subsequence},
} 


@article{wiki,
 title = {Longest common subsequence problem},
 note = {http://goo.gl/5bMjT},
 journal = {Wikipedia}
}

@article{pj,
 title = {Parallel Java Library},
 note = {http://www.cs.rit.edu/~ark/pj.shtml},
 journal = {Rochester Institute of Technology},
 author = {Alan Kaminsky}
}

@book{cormen01,
  author = {Thomas H. Cormen and Charles E. Leiserson and Ronald L. Rivest and Clifford Stein},
  edition = {2nd},
  interhash = {dcdeb0ec50a6798abf1724056982b543},
  intrahash = {225d42638921bee01b4ac8ff991b0a6a},
  publisher = {The MIT Press},
  title = {Introduction to Algorithms},
  url = {http://www.amazon.com/Introduction-Algorithms-Thomas-H-Cormen/dp/0262032937%3FSubscriptionId%3D13CT5CVB80YFWJEPWS02%26tag%3Dws%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0262032937},
  year = 2001,
  ean = {9780262032933},
  keywords = {algorithm algorithms computer data design paper-cpm programming science structures},
  added-at = {2009-02-18T15:27:17.000+0100},
  asin = {0262032937},
  description = {Amazon.com: Introduction to Algorithms: Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, Clifford Stein: Books},
  isbn = {0262032937},
  biburl = {http://www.bibsonomy.org/bibtex/2225d42638921bee01b4ac8ff991b0a6a/rekstorm},
  dewey = {005.1}
}


%% This BibTeX bibliography file in UTF-8 format was created using Papers.
%% http://mekentosj.com/papers/

@article{JinxianLin:2010p424,
author = {Jinxian Lin and Yiqing Lv;}, 
journal = {Computational Intelligence and Natural Computing Proceedings (CINC), 2010 Second International Conference on},
title = {Computing all longest common subsequences on MPI cluster},
abstract = {Finding out the longest common subsequences (LCS) is one of the most important problems of Bioengineering. But there is still not excellent algorithm for computing all of the longest common subsequences (ALCS). An existing fast algorithm for LCS was studied and improved in this paper. We combined the algorithm with MPI cluster and computed all the longest common subsequences of two random generate gene sequences on MPI cluster. The experiment results show that computing ALCS on MPI cluster is an efficient and practicality method.},
pages = {386 -- 389},
volume = {1},
year = {2010},
date-added = {2010-12-13 16:04:37 -0500},
date-modified = {2010-12-13 16:04:37 -0500},
doi = {10.1109/CINC.2010.5643814},
pmid = {5643814},
URL = {http://ieeexplore.ieee.org/search/srchabstract.jsp?tp=&arnumber=5643814&queryText%253D%2528%2528Bit-Parallel+Algorithm+for+the+Constrained+Longest+Common+Subsequence+Problem%2529%2529%2526openedRefinements%253D*%2526sortType%253Ddesc_Publication+Year%2526matchBoolean%253Dtrue%2526rowsPerPage%253D50%2526searchField%253DSearch+All},
local-url = {file://localhost/Users/rich/Documents/Papers/2010/Jinxian%20Lin/Computing%20all%20longest%20common%20subsequences.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p424},
read = {Yes},
rating = {0}
}

@article{Boukerche:2005p420,
author = {Boukerche}, 
journal = {Parallel and Distributed Processing Symposium, 2005. Proceedings. 19th IEEE International},
title = {Parallel strategies for local biological sequence alignment in a cluster of workstations},
abstract = {Sequence comparison is a basic operation in DNA sequencing projects, and most of sequence comparison methods used are based on heuristics, which are faster but there are no guarantees that the best alignments are produced. On the other hand, the algorithm proposed by Smith-Waterman obtains the best local alignments at the expense of very high computing power and huge memory requirements. In this article, we present and evaluate our experiments with three strategies to run the Smith-Waterman algorithm in a cluster of workstations using a distributed shared memory system. Our results on an eight-machine cluster presented very good speedups and indicate that impressive improvements can be achieved, depending on the strategy used. Also, we present some theoretical remarks on how to reduce the amount of memory used.},
year = {2005},
date-added = {2010-12-13 15:57:52 -0500},
date-modified = {2010-12-13 15:57:52 -0500},
doi = {10.1109/IPDPS.2005.329},
pmid = {1420219},
URL = {http://ieeexplore.ieee.org/search/srchabstract.jsp?tp=&arnumber=1420219&queryText%253D%2528%2528Parallel+strategies+for+the+local+biological+sequence+alignment+in+a+cluster+of+workstations%2529%2529%2526openedRefinements%253D*%2526sortType%253Ddesc_Publication+Year%2526matchBoolean%253Dtrue%2526rowsPerPage%253D50%2526searchField%253DSearch+All},
local-url = {file://localhost/Users/rich/Documents/Papers/2005/Boukerche/Parallel%20strategies%20for%20local%20biological.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p420},
rating = {0}
}

@article{LeiXiao:2008p449,
author = {Lei Xiao and Hongzhi Song and Meijie Zhu and Yingjie Kuang;}, 
journal = {Bioinformatics and Biomedical Engineering, 2008. ICBBE 2008. The 2nd International Conference on},
title = {A PC Cluster Based Parallel Algorithm for Longest Common Subsequence Problems},
abstract = {Finding longest common subsequence (LCS) is one of the most important bioinformatics tasks. The algorithm's time and space consumption will increase dramatically with the scale of the problem. This paper analyzed the existing LCS algorithms, and proposed a parallel algorithm. The algorithm was designed to running on PC clusters to achieve high performance. Experimental results showed that it is a practical low cost and efficient solution for sequences problem.},
pages = {820 -- 823},
year = {2008},
date-added = {2010-12-13 16:04:06 -0500},
date-modified = {2010-12-13 16:04:06 -0500},
doi = {10.1109/ICBBE.2008.201},
pmid = {4535081},
URL = {http://ieeexplore.ieee.org/search/srchabstract.jsp?tp=&arnumber=4535081&queryText%253D%2528%2528Bit-Parallel+Algorithm+for+the+Constrained+Longest+Common+Subsequence+Problem%2529%2529%2526openedRefinements%253D*%2526sortType%253Ddesc_Publication+Year%2526matchBoolean%253Dtrue%2526rowsPerPage%253D50%2526searchField%253DSearch+All},
local-url = {file://localhost/Users/rich/Documents/Papers/2008/Lei%20Xiao/A%20PC%20Cluster%20Based%20Parallel.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p449},
rating = {0}
}

@article{Rashid:2007p409,
author = {Nuraini Rashid and Rosni Abdullah and Abdullah Talib}, 
journal = {ICCOMP'07: Proceedings of the 11th WSEAS International Conference on Computers},
title = {Parallel homologous search with Hirschberg algorithm: a hybrid MPI-Pthreads solution},
abstract = {In this paper, we apply two different parallel programming model, the message passing model using Message Passing Interface (MPI) and the multithreaded model using Pthreads, to protein sequence homologous search. The protein sequence homologous search ...},
year = {2007},
month = {Jul},
keywords = {pthreads, MPI, protein sequence data, Hirschberg algorithm, parallel programming model, homologous search}, 
date-added = {2010-12-12 22:39:54 -0500},
date-modified = {2010-12-12 22:39:54 -0500},
URL = {http://portal.acm.org/citation.cfm?id=1353956.1353997&coll=DL&dl=GUIDE&CFID=1740755&CFTOKEN=47668619},
local-url = {file://localhost/Users/rich/Documents/Papers/2007/Rashid/Parallel%20homologous%20search%20with%20Hirschberg.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p409},
read = {Yes},
rating = {0}
}

@article{BenMabrouk:2010p429,
author = {B Ben Mabrouk and H Hasni and Z Mahjoub}, 
journal = {Computer Systems and Applications (AICCSA), 2010 IEEE/ACS International Conference on},
title = {Parallelization of the dynamic programming algorithm for solving the longest common subsequence problem},
abstract = {We address in this paper the design and analysis of cost-optimal parallel algorithms for solving the problem of the longest common subsequence. Starting from the standard sequential dynamic programming algorithm which has the structure of a perfect nest of two embedded loops, we make use of a specific three-step parallelization approach consisting in (i) a dependence analysis within the nest ; (ii) the determination of a particular unimodular transformation leading to a new nest whose second loop is parallel ; (iii) the design of two linear time schedulings for the derived parallel algorithm when a given number of processors is available. The first scheduling is fitted to the nest structure while the second is greedy oriented and optimal. The makespans of the two schedulings are explicitly determined. This permits to establish a comparison showing their respective efficiencies.},
pages = {1 -- 8},
year = {2010},
date-added = {2010-12-13 16:04:37 -0500},
date-modified = {2010-12-13 16:04:37 -0500},
doi = {10.1109/AICCSA.2010.5587006},
pmid = {5587006},
URL = {http://ieeexplore.ieee.org/search/srchabstract.jsp?tp=&arnumber=5587006&queryText%253D%2528%2528Bit-Parallel+Algorithm+for+the+Constrained+Longest+Common+Subsequence+Problem%2529%2529%2526openedRefinements%253D*%2526sortType%253Ddesc_Publication+Year%2526matchBoolean%253Dtrue%2526rowsPerPage%253D50%2526searchField%253DSearch+All},
local-url = {file://localhost/Users/rich/Documents/Papers/2010/Ben%20Mabrouk/Parallelization%20of%20the%20dynamic%20programming.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p429},
rating = {0}
}

@article{Boukerche:2004p421,
author = {Boukerche}, 
journal = {Parallel and Distributed Processing Symposium, 2004. Proceedings. 18th International},
title = {A performance evaluation of a local DNA sequence alignment algorithm on a cluster of workstations},
abstract = {Summary form only given. Biological inspired techniques have proven to be efficient in solving a variety of real problems using parallel and distributed processing. In this paper, we wish to study the DNA sequencing problem known for its computational requirements which far exceed the computing capabilities of the fastest available sequential machines. Sequence comparison is a basic operation of the DNA sequencing problem, mainly due to the large number of DNA sequences. While most of the methods used are based on heuristic paradigms and have relatively a fast execution time, they do not produce optimal alignments sought by most biologists. Recently, many organisms had their DNA entirely sequenced, and this reality presents the need for comparing long DNA sequences, which is a challenging task due to its high demands for computational requirements (power and memory). In this paper, we present an efficient parallel strategy for implementing a sequence alignment algorithm for long sequences, and evaluate its performance using a cluster of workstations. This strategy was implemented in JIAJIA, a scope consistent software DSM system. Our results indicate clearly that our scheme is feasible, achieve a good speedup and can help in obtaining a better solution to the DNA sequencing problem when compared to previous schemes.},
year = {2004},
date-added = {2010-12-13 15:57:52 -0500},
date-modified = {2010-12-13 15:57:53 -0500},
doi = {10.1109/IPDPS.2004.1303158},
pmid = {1303158},
URL = {http://ieeexplore.ieee.org/search/srchabstract.jsp?tp=&arnumber=1303158&queryText%253D%2528%2528Parallel+strategies+for+the+local+biological+sequence+alignment+in+a+cluster+of+workstations%2529%2529%2526openedRefinements%253D*%2526sortType%253Ddesc_Publication+Year%2526matchBoolean%253Dtrue%2526rowsPerPage%253D50%2526searchField%253DSearch+All},
local-url = {file://localhost/Users/rich/Documents/Papers/2004/Boukerche/A%20performance%20evaluation%20of%20a.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p421},
rating = {0}
}

@article{XuyuXiang:2007p452,
author = {Xuyu Xiang and Dafang Zhang and Jiaohua Qin;}, 
journal = {Computational Intelligence and Security Workshops, 2007. CISW 2007. International Conference on},
title = {A New Algorithm for the Longest Common Subsequence Problem},
abstract = {In order to find the longest common subsequence (LCS) as soon as possible, we, with the method of match pairs, propose the new algorithm of the sequence of DNA, which is efficient both in time and in space on the basis of the improved dynamic programming theorem.},
pages = {112 -- 115},
year = {2007},
date-added = {2010-12-13 16:04:06 -0500},
date-modified = {2010-12-13 16:04:06 -0500},
doi = {10.1109/CISW.2007.4425458},
pmid = {4425458},
URL = {http://ieeexplore.ieee.org/search/srchabstract.jsp?tp=&arnumber=4425458&queryText%253D%2528%2528Bit-Parallel+Algorithm+for+the+Constrained+Longest+Common+Subsequence+Problem%2529%2529%2526openedRefinements%253D*%2526sortType%253Ddesc_Publication+Year%2526matchBoolean%253Dtrue%2526rowsPerPage%253D50%2526searchField%253DSearch+All},
local-url = {file://localhost/Users/rich/Documents/Papers/2007/Xuyu%20Xiang/A%20New%20Algorithm%20for%20the.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p452},
rating = {0}
}

@article{Apostolico:2010p363,
author = {Alberto Apostolico}, 
journal = {Algorithms and theory of computation handbook},
title = {General pattern matching},
year = {2010},
month = {Feb},
date-added = {2010-12-12 14:59:55 -0500},
date-modified = {2010-12-12 14:59:57 -0500},
URL = {http://portal.acm.org/ft_gateway.cfm?id=1882772&type=pdf&coll=DL&dl=GUIDE&CFID=1681490&CFTOKEN=47357463},
local-url = {file://localhost/Users/rich/Documents/Papers/2010/Apostolico/General%20pattern%20matching.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p363},
read = {Yes},
rating = {0}
}

@article{Franklin:2010p377,
author = {Bryan Franklin and Steven Seidel}, 
journal = {SpringSim '10: Proceedings of the 2010 Spring Simulation Multiconference},
title = {A parallel longest common subsequence algorithm in UPC},
year = {2010},
month = {Apr},
keywords = {longest common subsequence, unified parallel C, parallel}, 
date-added = {2010-12-12 14:59:55 -0500},
date-modified = {2010-12-12 14:59:57 -0500},
URL = {http://portal.acm.org/ft_gateway.cfm?id=1878634&type=pdf&coll=DL&dl=GUIDE&CFID=1681490&CFTOKEN=47357463},
local-url = {file://localhost/Users/rich/Documents/Papers/2010/Franklin/A%20parallel%20longest%20common%20subsequence.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p377},
read = {Yes},
rating = {0}
}

@article{Liu:2007p402,
author = {Wei Liu and Ling Chen and Lingjun Zou}, 
journal = {InfoScale '07: Proceedings of the 2nd international conference on Scalable information systems},
title = {A parallel LCS algorithm for biosequences alignment},
abstract = {Searching for the longest common substring (LCS) of biosequences is one of the most important tasks in Bioinformatics. A fast algorithm for LCS problem named FAST_LCS is presented. The algorithm first seeks the successors of the initial identical character ...},
year = {2007},
month = {Jun},
keywords = {bioinformatics, parallel processing, biosequences alignment}, 
date-added = {2010-12-12 22:39:40 -0500},
date-modified = {2010-12-12 22:39:40 -0500},
URL = {http://portal.acm.org/ft_gateway.cfm?id=1366911&type=pdf&coll=DL&dl=GUIDE&CFID=1740755&CFTOKEN=47668619},
local-url = {file://localhost/Users/rich/Documents/Papers/2007/Liu/A%20parallel%20LCS%20algorithm%20for.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p402},
read = {Yes},
rating = {0}
}

@article{Sun:2007p384,
author = {Xiaoming Sun and David Woodruff}, 
journal = {SODA '07: Proceedings of the eighteenth annual ACM-SIAM symposium on Discrete algorithms},
title = {The communication and streaming complexity of computing the longest common and increasing subsequences},
abstract = {We consider the communication complexity of finding the longest increasing subsequence (LIS) of a string shared between two parties. We prove tight bounds for the space complexity of randomized one-pass streaming algorithms for this problem. Our ...},
year = {2007},
month = {Jan},
date-added = {2010-12-12 22:39:26 -0500},
date-modified = {2010-12-12 22:39:26 -0500},
URL = {http://portal.acm.org/ft_gateway.cfm?id=1283419&type=pdf&coll=DL&dl=GUIDE&CFID=1740755&CFTOKEN=47668619},
local-url = {file://localhost/Users/rich/Documents/Papers/2007/Sun/The%20communication%20and%20streaming%20complexity.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p384},
read = {Yes},
rating = {0}
}

@article{Wang:2010p440,
author = {Q Wang and D Korkin and Y Shang}, 
journal = {Knowledge and Data Engineering, IEEE Transactions on},
title = {A Fast Multiple Longest Common Subsequence (MLCS) Algorithm},
abstract = {Finding the longest common subsequence (LCS) of multiple strings is an NP-hard problem, with many applications in the areas of bioinformatics and computational genomics. Although significant efforts have been made to address the problem and its special cases, the increasing complexity and size of biological data require more efficient methods applicable to an arbitrary number of strings. In this paper, we present a new algorithm for the general case of multiple LCS (or MLCS) problem, i.e., finding a LCS of any number of strings, and its parallel realization. The algorithm is based on the dominant point approach and employs a fast divide-and-conquer technique to compute the dominant points. When applied to a case of 3 strings, our algorithm demonstrates the same performance as the fastest existing MLCS algorithm designed for that specific case. When applied to more than 3 strings, our algorithm is significantly faster than the best existing sequential methods, reaching up to 2-3 orders of magnitude faster speed on large-size problems. Finally, we present an efficient parallel implementation of the algorithm. Evaluating the parallel algorithm on a benchmark set of both random and biological sequences reveals a near-linear speed-up with respect to the sequential algorithm.},
number = {99},
pages = {1 -- 1},
volume = {PP},
year = {2010},
date-added = {2010-12-13 16:04:06 -0500},
date-modified = {2010-12-13 16:04:06 -0500},
doi = {10.1109/TKDE.2010.123},
pmid = {5530316},
URL = {http://ieeexplore.ieee.org/search/srchabstract.jsp?tp=&arnumber=5530316&queryText%253D%2528%2528Bit-Parallel+Algorithm+for+the+Constrained+Longest+Common+Subsequence+Problem%2529%2529%2526openedRefinements%253D*%2526sortType%253Ddesc_Publication+Year%2526matchBoolean%253Dtrue%2526rowsPerPage%253D50%2526searchField%253DSearch+All},
local-url = {file://localhost/Users/rich/Documents/Papers/2010/Wang/A%20Fast%20Multiple%20Longest%20Common.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p440},
rating = {0}
}

@article{WeiLiu:2006p438,
author = {Wei Liu;}, 
journal = {Computer and Computational Sciences, 2006. IMSCCS '06. First International Multi-Symposiums on},
title = {A Fast Parallel Longest Common Subsequence Algorithm Based on Pruning Rules},
abstract = {Searching for the longest common subsequence (LCS) of biosequences is one of the most important problems in bioinformatics. A fast algorithm for LCS problem FAST_LCS is presented. The algorithm first seeks the successors of the initial identical character pairs according to a successor table to obtain all the identical pairs and their levels. By tracing back from the identical character pair at the highest level, strong pruning rules are developed. For two sequences X and Y with length n and m, respectively, the memory required for FAST_LCS is max{4*(n+1)+4*(m+1), L}, where L is the number of identical character pairs. The time complexity of parallel computing is O(|LCS(X,Y)|), where |LCS(X,Y)| is the length of the LCS of X, Y. Experimental result on the gene sequences of tigr database using MPP parallel computer Shenteng 1800 shows that our algorithm can find the exact solutions significantly more efficiently than other LCS algorithms},
pages = {27 -- 34},
volume = {1},
year = {2006},
date-added = {2010-12-13 16:04:06 -0500},
date-modified = {2010-12-13 16:04:06 -0500},
doi = {10.1109/IMSCCS.2006.6},
pmid = {4673521},
URL = {http://ieeexplore.ieee.org/search/srchabstract.jsp?tp=&arnumber=4673521&queryText%253D%2528%2528Bit-Parallel+Algorithm+for+the+Constrained+Longest+Common+Subsequence+Problem%2529%2529%2526openedRefinements%253D*%2526sortType%253Ddesc_Publication+Year%2526matchBoolean%253Dtrue%2526rowsPerPage%253D50%2526searchField%253DSearch+All},
local-url = {file://localhost/Users/rich/Documents/Papers/2006/Wei%20Liu/A%20Fast%20Parallel%20Longest%20Common.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p438},
rating = {0}
}

@article{Boukerche:2007p401,
author = {Azzedine Boukerche and Alba Melo and Mauricio Ayala-Rinc{\'o}n and Maria Walter}, 
journal = {Journal of Parallel and Distributed Computing},
title = {Parallel strategies for the local biological sequence alignment in a cluster of workstations},
abstract = {Recently, many organisms have had their DNA entirely sequenced. This reality presents the need for comparing long DNA sequences, which is a challenging task due to its high demands for computational power and memory. Sequence comparison is a basic operation ...},
number = {2},
volume = {67},
year = {2007},
month = {Feb},
keywords = {Cluster computing, Analysis of parallel algorithms, Sequence alignment}, 
date-added = {2010-12-12 22:39:36 -0500},
date-modified = {2010-12-12 22:39:36 -0500},
URL = {http://portal.acm.org/citation.cfm?id=1223676.1223689&coll=DL&dl=GUIDE&CFID=1740755&CFTOKEN=47668619},
local-url = {file://localhost/Users/rich/Documents/Papers/2007/Boukerche/Parallel%20strategies%20for%20the%20local.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p401},
rating = {0}
}

@article{Liu:2006p436,
author = {Wei Liu and Ling Chen;}, 
journal = {Machine Learning and Cybernetics, 2006 International Conference on},
title = {A Parallel Algorithm for Solving LCS of Multiple Bioseqences},
abstract = {A fast algorithm named FAST_LCS is presented for the longest common substring (LCS) problem. The algorithm firstly seeks the successors of the initial identical character tuples according to successor tables to obtain all the identical tuples and their levels. Then the result of LCS can be obtained by tracing back from the identical character tuple with the largest level. For n biosequences X 1, X2, ..., Xn, the time complexity of sequentially execution of our algorithm is O(L). Here L is the number of identical character tuples. The time complexity of our parallel algorithm is O(|LCS|), where LCS is the length of the longest common substring of X1, X2, ... , Xn. This time complexity is independent of the number of sequences n. Some experiments have been conducted on the gene sequences of tigr database using MPP parallel computer Shenteng 1800. The results show that our algorithm is accurate and more efficient than other LCS algorithms},
pages = {4316 -- 4321},
year = {2006},
date-added = {2010-12-13 16:04:06 -0500},
date-modified = {2010-12-13 16:04:06 -0500},
doi = {10.1109/ICMLC.2006.259020},
pmid = {4028832},
URL = {http://ieeexplore.ieee.org/search/srchabstract.jsp?tp=&arnumber=4028832&queryText%253D%2528%2528Bit-Parallel+Algorithm+for+the+Constrained+Longest+Common+Subsequence+Problem%2529%2529%2526openedRefinements%253D*%2526sortType%253Ddesc_Publication+Year%2526matchBoolean%253Dtrue%2526rowsPerPage%253D50%2526searchField%253DSearch+All},
local-url = {file://localhost/Users/rich/Documents/Papers/2006/Liu/A%20Parallel%20Algorithm%20for%20Solving.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p436},
rating = {0}
}

@article{NandanBabu:1997p430,
author = {K Nandan Babu and S Saxena}, 
journal = {High-Performance Computing, 1997. Proceedings. Fourth International Conference on},
title = {Parallel algorithms for the longest common subsequence problem},
abstract = {The longest common subsequence problem is to find a substring that is common to two given strings and is at least as long as any other such string. If m and n are the lengths of the two strings (m<2), we obtain O(log m) time parallel algorithm with mn processors and an O(log 2 n) time optimal parallel algorithm. Serial complexity on the decision tree model is Θ(mn)},
pages = {120 -- 125},
year = {1997},
date-added = {2010-12-13 16:04:37 -0500},
date-modified = {2010-12-13 16:04:37 -0500},
doi = {10.1109/HIPC.1997.634481},
pmid = {634481},
URL = {http://ieeexplore.ieee.org/search/srchabstract.jsp?tp=&arnumber=634481&queryText%253D%2528%2528Bit-Parallel+Algorithm+for+the+Constrained+Longest+Common+Subsequence+Problem%2529%2529%2526openedRefinements%253D*%2526sortType%253Ddesc_Publication+Year%2526matchBoolean%253Dtrue%2526rowsPerPage%253D50%2526searchField%253DSearch+All},
local-url = {file://localhost/Users/rich/Documents/Papers/1997/Nandan%20Babu/Parallel%20algorithms%20for%20the%20longest.pdf},
uri = {papers://4A6A26BB-4CC6-4A7B-8B49-6EF38C0C5EF2/Paper/p430},
rating = {0}
}

